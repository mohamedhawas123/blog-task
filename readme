readme
# API FOR LOGIN AND REGISTER AND BLOG CRUD

This is a basic implementation of a Blog REST API that allows users to register, login, create posts, list all posts, edit their own posts, and delete their own posts. The API is built using Express.js, MongoDB as the database, password encryption for security, and input validation for data integrity.

## Table of Contents

- [Overview](#overview)
- [Prerequisites](#prerequisites)
- [Installation](#installation)
- [API Documentation](#api-documentation)
- [API DEPLOYMENT](#DEPLOYMENT)

## Overview

This project consists of three main components:
1. **Authentication:** 
2. **BLOG CRUD:** .
3. **MIDDLEWARE:** 

## Prerequisites

Before you begin, ensure you have the following prerequisites:

- npm
- express.js
- bcryptjs
- cors
- express-async-handler
- mongoose
- swagger-jsdoc
- swagger-ui-express
- docker(if you want to run the docker image)



## Installation

1. Clone this repository to your local machine: https://github.com/mohamedhawas123/blog-task.git

2. npm install

3. npm start

OR you can run docker image after you clone the project

docker run express-doc


#API Documentation

1- Register user: POST  https://blog-task-production.up.railway.app/api/users/register
2- login user: POST https://blog-task-production.up.railway.app/api/users/login
3- List blogs: GET https://blog-task-production.up.railway.app/api/blog  
4- create blog: POST https://blog-task-production.up.railway.app/api/blog  (require Bearer Token)
5- edit blog: PUT https://blog-task-production.up.railway.app/api/blog/:id (require Bearer Token)
6- delete blog: DELETE https://blog-task-production.up.railway.app/api/blog/:id (require Bearer Token)
7- swagger: https://blog-task-production.up.railway.app/api-docs/


#DEPLOYMENT

deployed API: https://blog-task-production.up.railway.app


